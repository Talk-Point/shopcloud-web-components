{"version":3,"file":"sc-query-field.sc-spreadsheet-uploader.sc-taxonomy.sc-textarea.entry.esm.js","sources":["src/components/sc-query-field/sc-query-field.css?tag=sc-query-field&encapsulation=shadow","src/components/sc-query-field/sc-query-field.tsx","src/components/sc-spreadsheet-uploader/sc-spreadsheet-uploader.css?tag=sc-spreadsheet-uploader&encapsulation=shadow","src/components/sc-spreadsheet-uploader/sc-spreadsheet-uploader.tsx","src/components/sc-taxonomy/sc-taxonomy.css?tag=sc-taxonomy&encapsulation=shadow","src/components/sc-taxonomy/sc-taxonomy.tsx","src/components/sc-textarea/sc-textarea.css?tag=sc-textarea&encapsulation=shadow","src/components/sc-textarea/sc-textarea.tsx"],"sourcesContent":[".query-field {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  font-family: sans-serif;\n}\n\n.tags {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n}\n\n.tag {\n  background-color: #1f4acd;\n  color: white;\n  padding: 0.25rem 0.5rem;\n  border-radius: 1rem;\n  display: inline-flex;\n  align-items: center;\n  gap: 0.25rem;\n  font-size: 0.875rem;\n}\n\n.remove-button {\n  background: none;\n  border: none;\n  color: white;\n  font-size: 1rem;\n  cursor: pointer;\n}\n\n.input-wrapper {\n  position: relative;\n}\n\n.query-input {\n  width: 100%;\n  padding: 0.5rem;\n  border: 1px solid #ccc;\n  border-radius: 0.375rem;\n  font-size: 1rem;\n  outline: none;\n}\n\n.query-input:focus {\n  border-color: #1f4acd;\n}\n\n.context-menu {\n  position: absolute;\n  top: 100%;\n  left: 0;\n  background: #fff;\n  border: 1px solid #ccc;\n  border-radius: 0.375rem;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  z-index: 100;\n  display: none;\n  margin-top: 0.25rem;\n}\n\n.context-menu.visible {\n  display: block;\n}\n\n.suggestion {\n  padding: 0.5rem;\n  cursor: pointer;\n  font-size: 0.9rem;\n}\n\n.suggestion:hover {\n  background-color: #f3f4f6;\n}","import { Component, h, State, Prop, Event, EventEmitter, Element } from '@stencil/core';\n\n@Component({\n  tag: 'sc-query-field',\n  styleUrl: 'sc-query-field.css',\n  shadow: true,\n})\nexport class ScQueryField {\n  @State() filters: string[] = [];\n  @State() inputValue: string = '';\n  @State() suggestions: string[] = [];\n  @State() currentStep: 'field' | 'operator' | 'value' = 'field';\n  @State() contextMenuVisible: boolean = false;\n\n  /**\n   * Fields can be passed as a JSON string or a parsed array of field definitions.\n   */\n  @Prop() fields: string | FieldDefinition[] = [];\n\n  /**\n   * Optional class for the input field.\n   */\n  @Prop() inputClass: string; // Optional class for textarea\n\n  /**\n   * Emitted whenever the query changes. The detail contains the current query string.\n   */\n  @Event() queryChange: EventEmitter<string>;\n\n  /**\n   * Emitted when the user submits the query (e.g., pressing Enter on a complete filter).\n   * The detail contains the final query string.\n   */\n  @Event() querySubmit: EventEmitter<string>;\n\n  @Element() hostElement: HTMLElement;\n  hiddenInput!: HTMLInputElement;\n  inputRef!: HTMLInputElement;\n\n  componentWillLoad() {\n    // Parse fields if it's a JSON string\n    if (typeof this.fields === 'string') {\n      try {\n        const parsed = JSON.parse(this.fields);\n        if (Array.isArray(parsed)) {\n          this.fields = parsed;\n        } else {\n          console.warn('Invalid fields prop: expected an array.');\n          this.fields = [];\n        }\n      } catch (error) {\n        console.error('Error parsing fields prop:', error);\n        this.fields = [];\n      }\n    }\n  }\n\n  componentDidLoad() {\n    // Create a hidden input to integrate with form submissions\n    this.hiddenInput = document.createElement('input');\n    this.hiddenInput.type = 'hidden';\n    this.hiddenInput.name = 'query';\n    this.hostElement.appendChild(this.hiddenInput);\n\n    // Close context menu on outside click\n    document.addEventListener('click', this.handleOutsideClick);\n    // Close context menu on ESC\n    document.addEventListener('keydown', this.handleKeyDownEscape);\n  }\n\n  disconnectedCallback() {\n    document.removeEventListener('click', this.handleOutsideClick);\n    document.removeEventListener('keydown', this.handleKeyDownEscape);\n  }\n\n  handleOutsideClick = (event: MouseEvent) => {\n    if (!this.hostElement.contains(event.target as Node)) {\n      this.contextMenuVisible = false;\n    }\n  };\n\n  handleKeyDownEscape = (event: KeyboardEvent) => {\n    if (event.key === 'Escape') {\n      this.contextMenuVisible = false;\n    }\n  };\n\n  handleInputFocus() {\n    this.updateSuggestions();\n    this.contextMenuVisible = true;\n  }\n\n  handleInputChange(event: Event) {\n    this.inputValue = (event.target as HTMLInputElement).value;\n    this.updateSuggestions();\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (event.key === 'Enter' && this.inputValue.trim() !== '') {\n      const valid = this.validateInput(this.inputValue.trim());\n      if (valid) {\n        // Add the filter; if it's a string field, the value will be quoted inside addFilter().\n        this.addFilter(this.inputValue.trim());\n        this.inputValue = '';\n        this.contextMenuVisible = false;\n        // Emit querySubmit when a valid filter is added via Enter\n        this.querySubmit.emit(this.getQueryValue());\n      } else {\n        alert('Invalid filter. Use format: field:operator:value');\n      }\n    }\n  }\n\n  handleSuggestionClick(suggestion: string) {\n    const parts = this.inputValue.split(':');\n    if (this.currentStep === 'field') {\n      this.inputValue = `${suggestion}:`;\n    } else if (this.currentStep === 'operator') {\n      this.inputValue = `${parts[0]}:${suggestion}:`;\n    } else if (this.currentStep === 'value') {\n      this.inputValue = `${parts[0]}:${parts[1]}:${suggestion}`;\n    }\n    this.updateSuggestions();\n    this.inputRef.focus();\n  }\n\n  addFilter(filter: string) {\n    // If the field is string type, wrap the value in quotes\n    const parts = filter.split(':');\n    if (parts.length === 3) {\n      const [fieldName, operator, value] = parts;\n      const fieldArray = this.fields as FieldDefinition[];\n      const field = fieldArray.find(f => f.name === fieldName);\n\n      if (field && field.type === 'string') {\n        // Ensure the value is quoted\n        // Remove existing quotes if any, then add single quotes\n        const quotedValue = `'${value.replace(/^'|'$/g, '')}'`;\n        filter = `${fieldName}:${operator}:${quotedValue}`;\n      }\n    }\n\n    this.filters = [...this.filters, filter];\n    this.emitQueryChange();\n  }\n\n  removeFilter(index: number) {\n    this.filters = this.filters.filter((_, i) => i !== index);\n    this.emitQueryChange();\n  }\n\n  emitQueryChange() {\n    const query = this.getQueryValue();\n    this.queryChange.emit(query);\n    if (this.hiddenInput) {\n      this.hiddenInput.value = query;\n    }\n  }\n\n  getQueryValue(): string {\n    return this.filters.join(' ');\n  }\n\n  updateSuggestions() {\n    const parts = this.inputValue.split(':');\n    const fieldArray = this.fields as FieldDefinition[];\n\n    if (parts.length === 1) {\n      // Step: Selecting Field\n      this.currentStep = 'field';\n      const prefix = parts[0].toLowerCase();\n      this.suggestions = fieldArray.map(f => f.name).filter(name => prefix === '' || name.toLowerCase().startsWith(prefix));\n    } else if (parts.length === 2) {\n      // Step: Selecting Operator\n      this.currentStep = 'operator';\n      const field = fieldArray.find(f => f.name === parts[0]);\n      if (field) {\n        this.suggestions = this.getOperatorsForType(field.type);\n      } else {\n        this.suggestions = [];\n      }\n    } else if (parts.length === 3) {\n      // Step: Selecting Value\n      this.currentStep = 'value';\n      const field = fieldArray.find(f => f.name === parts[0]);\n      if (field) {\n        this.suggestions = this.getValuesForType(field.type);\n      } else {\n        this.suggestions = [];\n      }\n    } else {\n      this.suggestions = [];\n    }\n\n    this.contextMenuVisible = this.suggestions.length > 0;\n  }\n\n  validateInput(input: string): boolean {\n    const parts = input.split(':');\n    if (parts.length === 3) {\n      const [fieldName, operator, value] = parts;\n      const fieldArray = this.fields as FieldDefinition[];\n      const field = fieldArray.find(f => f.name === fieldName);\n      if (!field) return false;\n\n      if (!this.getOperatorsForType(field.type).includes(operator)) return false;\n\n      return this.validateValueForType(value, field.type);\n    }\n    return false;\n  }\n\n  getOperatorsForType(type: FieldType): string[] {\n    switch (type) {\n      case 'string':\n        return ['LIKE', '=', '!=', 'null', 'notnull'];\n      case 'bool':\n        return ['=', 'null', 'notnull'];\n      case 'number':\n        return ['>', '<', '>=', '<=', '='];\n      default:\n        return [];\n    }\n  }\n\n  getValuesForType(type: FieldType): string[] {\n    // Example static suggestions. In a real-world scenario, you might fetch these dynamically.\n    switch (type) {\n      case 'string':\n        return ['test', 'example'];\n      case 'bool':\n        return ['true', 'false'];\n      case 'number':\n        return ['0', '100', '200'];\n      default:\n        return [];\n    }\n  }\n\n  validateValueForType(value: string, type: FieldType): boolean {\n    // The user enters value without quotes initially\n    switch (type) {\n      case 'string':\n        // Just ensure it's a string (non-empty)\n        return typeof value === 'string' && value.trim() !== '';\n      case 'bool':\n        return value === 'true' || value === 'false';\n      case 'number':\n        return !isNaN(Number(value));\n      default:\n        return false;\n    }\n  }\n\n  render() {\n    return (\n      <div class=\"query-field\">\n        <div class=\"input-wrapper\">\n          <input\n            type=\"text\"\n            ref={el => (this.inputRef = el as HTMLInputElement)}\n            class={`query-input ${this.inputClass}`}\n            value={this.inputValue}\n            onFocus={() => this.handleInputFocus()}\n            onInput={event => this.handleInputChange(event)}\n            onKeyDown={event => this.handleKeyDown(event)}\n            placeholder=\"Add filters (field:operator:value)\"\n          />\n          <div class={`context-menu ${this.contextMenuVisible ? 'visible' : ''}`}>\n            {this.suggestions.map(suggestion => (\n              <div class=\"suggestion\" onClick={() => this.handleSuggestionClick(suggestion)}>\n                {suggestion}\n              </div>\n            ))}\n          </div>\n        </div>\n        <div class=\"tags\">\n          {this.filters.map((filter, index) => (\n            <span class=\"tag\">\n              {filter}\n              <button type=\"button\" class=\"remove-button\" onClick={() => this.removeFilter(index)}>\n                &times;\n              </button>\n            </span>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n",":host {\n  /* Light mode variables */\n  --background-color: #ffffff;\n  --text-color: #333333;\n  --border-color: #cccccc;\n  --input-background: #ffffff;\n  --row-border: #eeeeee;\n  --button-background: #007bff;\n  --button-color: #ffffff;\n  --button-disabled-background: #cccccc;\n  --button-disabled-color: #666666;\n  --error-color: #dc3545;\n  --success-color: #28a745;\n  --pending-color: #ffd700;\n  --reference-background: #f8f9fa;\n  --reference-color: #495057;\n}\n\n@media (prefers-color-scheme: dark) {\n  :host {\n    /* Dark mode variables */\n    --background-color: #1a1a1a;\n    --text-color: #e0e0e0;\n    --border-color: #404040;\n    --input-background: #2d2d2d;\n    --row-border: #333333;\n    --button-background: #0056b3;\n    --button-color: #ffffff;\n    --button-disabled-background: #404040;\n    --button-disabled-color: #808080;\n    --error-color: #ff4d4d;\n    --success-color: #2fb344;\n    --pending-color: #ffd700;\n    --reference-background: #2d2d2d;\n    --reference-color: #b8b8b8;\n  }\n}\n\n.container {\n  padding: 20px;\n  font-family: system-ui, -apple-system, sans-serif;\n  background-color: var(--background-color);\n  color: var(--text-color);\n}\n\n.input-section {\n  margin-bottom: 20px;\n}\n\n.button-group {\n  display: flex;\n  gap: 10px;\n}\n\ntextarea {\n  width: 100%;\n  margin-bottom: 10px;\n  padding: 10px;\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  background-color: var(--input-background);\n  color: var(--text-color);\n}\n\ntextarea:focus {\n  outline: none;\n  border-color: var(--button-background);\n  box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);\n}\n\nbutton {\n  padding: 10px 20px;\n  background-color: var(--button-background);\n  color: var(--button-color);\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n}\n\nbutton:hover:not(:disabled) {\n  background-color: color-mix(in srgb, var(--button-background) 85%, black);\n}\n\nbutton:disabled {\n  background-color: var(--button-disabled-background);\n  color: var(--button-disabled-color);\n  cursor: not-allowed;\n}\n\n.data-grid {\n  margin-top: 20px;\n}\n\n.row {\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  border: 1px solid var(--row-border);\n  margin-bottom: 5px;\n  border-radius: 4px;\n  transition: background-color 0.2s ease;\n}\n\n.row:hover {\n  background-color: color-mix(in srgb, var(--background-color) 95%, var(--text-color));\n}\n\n.status-indicator {\n  width: 10px;\n  height: 10px;\n  border-radius: 50%;\n  margin-right: 10px;\n  flex-shrink: 0;\n}\n\n.row.pending .status-indicator {\n  background-color: var(--pending-color);\n}\n\n.row.success .status-indicator {\n  background-color: var(--success-color);\n}\n\n.row.error .status-indicator {\n  background-color: var(--error-color);\n}\n\n.row-data {\n  flex: 1;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.row-data span {\n  padding: 2px 6px;\n  border-radius: 3px;\n  background-color: color-mix(in srgb, var(--background-color) 97%, var(--text-color));\n}\n\nspan.reference {\n  background-color: var(--reference-background);\n  color: var(--reference-color);\n  padding: 2px 8px;\n  border-radius: 4px;\n  border: 1px solid var(--border-color);\n  font-weight: 500;\n}\n\n.error-message {\n  color: var(--error-color);\n  margin-left: 10px;\n  font-size: 0.9em;\n  flex-basis: 100%;\n  margin-top: 5px;\n}","import { Component, Prop, State, h } from '@stencil/core';\n\nexport interface ApiConfig {\n  url: string;\n  method: string;\n  headers?: Record<string, string>;\n}\n\nexport interface DataRow {\n  id: string;\n  data: any;\n  status: 'pending' | 'success' | 'error';\n  errorMessage?: string;\n  reference?: string; // Added reference field\n}\n\n@Component({\n  tag: 'sc-spreadsheet-uploader',\n  styleUrl: 'sc-spreadsheet-uploader.css',\n  shadow: true,\n})\nexport class ScSpreadsheetUploader {\n  @Prop() storageKey: string = 'spreadsheet-data';\n\n  // API Properties\n  @Prop() apiUrl: string = '';\n  @Prop() apiMethod: string = 'POST';\n  @Prop() apiHeaders: string = '{}';\n\n  @State() parsedData: DataRow[] = [];\n  @State() isProcessing: boolean = false;\n  private textArea!: HTMLTextAreaElement;\n\n  private getHeaders(): Record<string, string> {\n    try {\n      return {\n        'Content-Type': 'application/json',\n        ...JSON.parse(this.apiHeaders),\n      };\n    } catch (e) {\n      console.warn('Invalid apiHeaders format, using default headers');\n      return { 'Content-Type': 'application/json' };\n    }\n  }\n\n  componentWillLoad() {\n    const savedData = localStorage.getItem(this.storageKey);\n    if (savedData) {\n      this.parsedData = JSON.parse(savedData);\n    }\n  }\n\n  private parseInput = () => {\n    const input = this.textArea.value;\n    const rows = input.trim().split('\\n');\n    const headers = rows[0].split('\\t');\n\n    const newData: DataRow[] = rows.slice(1).map((row, index) => {\n      const values = row.split('\\t');\n      const rowData = {};\n      headers.forEach((header, i) => {\n        rowData[header.trim()] = values[i]?.trim() || '';\n      });\n\n      return {\n        id: `row-${index}`,\n        data: rowData,\n        status: 'pending',\n      };\n    });\n\n    this.parsedData = newData;\n    this.saveToLocalStorage();\n  };\n\n  private saveToLocalStorage = () => {\n    localStorage.setItem(this.storageKey, JSON.stringify(this.parsedData));\n  };\n\n  private async processData() {\n    if (!this.apiUrl) {\n      throw new Error('API URL ist nicht konfiguriert');\n    }\n\n    this.isProcessing = true;\n\n    for (const row of this.parsedData) {\n      if (row.status === 'success') continue;\n\n      try {\n        const response = await this.sendToAPI(row.data);\n        row.status = 'success';\n        row.errorMessage = undefined;\n        // Store reference if it exists in the response\n        if (response && response.reference) {\n          row.reference = response.reference;\n        }\n      } catch (error) {\n        row.status = 'error';\n        row.errorMessage = error.message;\n      }\n\n      this.parsedData = [...this.parsedData];\n      this.saveToLocalStorage();\n    }\n\n    this.isProcessing = false;\n  }\n\n  private async sendToAPI(data: any) {\n    try {\n      const response = await fetch(this.apiUrl, {\n        method: this.apiMethod,\n        headers: this.getHeaders(),\n        body: JSON.stringify(data),\n      });\n\n      if (response.status !== 200 && response.status !== 201) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const responseText = await response.text();\n      if (!responseText) {\n        return {}; // Return empty object for empty response\n      }\n\n      return JSON.parse(responseText);\n    } catch (error) {\n      throw new Error(`API-Fehler: ${error.message}`);\n    }\n  }\n\n  private clearData = () => {\n    this.parsedData = [];\n    localStorage.removeItem(this.storageKey);\n    this.textArea.value = '';\n  };\n\n  render() {\n    return (\n      <div class=\"container\">\n        <div class=\"input-section\">\n          <textarea ref={el => (this.textArea = el as HTMLTextAreaElement)} placeholder=\"Füge hier deine Tabellendaten ein...\" rows={10} />\n          <div class=\"button-group\">\n            <button onClick={this.parseInput} disabled={this.isProcessing}>\n              Daten einlesen\n            </button>\n            <button onClick={this.clearData} disabled={this.isProcessing}>\n              Zurücksetzen\n            </button>\n          </div>\n        </div>\n\n        {this.parsedData.length > 0 && (\n          <div class=\"data-section\">\n            <button onClick={() => this.processData()} disabled={this.isProcessing || !this.apiUrl}>\n              {this.isProcessing ? 'Verarbeite...' : 'An API senden'}\n            </button>\n\n            <div class=\"data-grid\">\n              {this.parsedData.map(row => (\n                <div class={`row ${row.status}`} key={row.id}>\n                  <div class=\"status-indicator\"></div>\n                  <div class=\"row-data\">\n                    {Object.entries(row.data).map(([key, value]) => (\n                      <span key={key}>\n                        {key}: {value}\n                      </span>\n                    ))}\n                    {row.reference && (\n                      <span class=\"reference\">\n                        Referenz: {row.reference}\n                      </span>\n                    )}\n                  </div>\n                  {row.errorMessage && <div class=\"error-message\">{row.errorMessage}</div>}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}",".taxonomy-container {\n  position: relative;\n  display: inline-block;\n  width: 100%;\n}\n\n.input-wrapper {\n  position: relative;\n}\n\n.taxonomy-input {\n  width: 100%;\n  box-sizing: border-box;\n  padding: 8px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n}\n\n.context-menu {\n  position: absolute;\n  top: 100%; /* directly below input */\n  left: 0;\n  width: 100%;\n  box-sizing: border-box;\n  border: 1px solid #ccc;\n  background: #fff;\n  z-index: 999;\n  max-height: 400px;\n  overflow-y: auto;\n  display: none;\n}\n\n.context-menu.visible {\n  display: block;\n}\n\n.suggestion {\n  padding: 8px;\n  cursor: pointer;\n}\n\n.suggestion:hover {\n  background: #eee;\n}","import { Component, h, State, Prop, Element, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'sc-taxonomy',\n  styleUrl: 'sc-taxonomy.css',\n  shadow: true,\n})\nexport class ScTaxonomy {\n  @Prop() url: string;\n  @Prop() name: string;\n  @Prop() value: string; // Add this line\n\n  @State() inputValue: string = '';\n  @State() suggestions: string[] = [];\n  @State() allData: string[] = [];\n  @State() contextMenuVisible: boolean = false;\n\n  @Element() hostElement: HTMLElement;\n  inputRef!: HTMLInputElement;\n\n  @Event() valueChange: EventEmitter<string>;\n\n  handleValueChange(newValue: string) {\n    this.valueChange.emit(newValue);\n  }\n\n  private debounceTimer: number;\n\n  async componentWillLoad() {\n    if (this.url) {\n      await this.fetchData();\n    }\n    if (this.value) {\n      this.inputValue = this.value; // Set the initial value\n    }\n  }\n\n  componentDidLoad() {\n    document.addEventListener('click', this.handleOutsideClick);\n    document.addEventListener('keydown', this.handleEscapeKey);\n  }\n\n  disconnectedCallback() {\n    document.removeEventListener('click', this.handleOutsideClick);\n    document.removeEventListener('keydown', this.handleEscapeKey);\n  }\n\n  private handleOutsideClick = (event: MouseEvent) => {\n    const root = this.hostElement.shadowRoot;\n    if (root && !root.contains(event.target as Node)) {\n      this.contextMenuVisible = false;\n    }\n  };\n\n  private handleEscapeKey = (event: KeyboardEvent) => {\n    if (event.key === 'Escape') {\n      this.contextMenuVisible = false;\n    }\n  };\n\n  async fetchData() {\n    try {\n      const response = await fetch(this.url);\n      const text = await response.text();\n      this.allData = text\n        .split('\\n')\n        .map(line => line.trim())\n        .filter(line => line !== '');\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      this.allData = [];\n    }\n  }\n\n  handleInputFocus() {\n    // On focus, don't show suggestions if empty. Wait until user types.\n    if (this.inputValue.length > 0) {\n      this.updateSuggestions(this.inputValue);\n    }\n  }\n\n  handleInputChange(event: Event) {\n    const value = (event.target as HTMLInputElement).value;\n    this.inputValue = value;\n\n    clearTimeout(this.debounceTimer);\n    this.debounceTimer = window.setTimeout(() => {\n      this.updateSuggestions(value);\n    }, 100);\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (event.key === 'Enter') {\n      // Close the menu on Enter if you wish:\n      // this.contextMenuVisible = false;\n    }\n  }\n\n  handleSuggestionClick(suggestion: string) {\n    this.inputValue = suggestion;\n    this.handleValueChange(suggestion);\n    this.inputRef.value = suggestion;\n    this.inputRef.focus();\n  }\n\n  updateSuggestions(term: string) {\n    if (term.trim().length === 0) {\n      // If no input, no suggestions\n      this.suggestions = [];\n      this.contextMenuVisible = false;\n    } else {\n      const lowerTerm = term.toLowerCase();\n      const filtered = this.allData.filter(line => line.toLowerCase().includes(lowerTerm));\n      // Limit the number of suggestions for performance if needed:\n      this.suggestions = filtered.slice(0, 100);\n      this.contextMenuVisible = this.suggestions.length > 0;\n    }\n  }\n\n  render() {\n    return (\n      <div class=\"taxonomy-container\">\n        <div class=\"input-wrapper\">\n          <input\n            type=\"text\"\n            ref={el => (this.inputRef = el as HTMLInputElement)}\n            class=\"taxonomy-input\"\n            name={this.name}\n            value={this.inputValue}\n            onFocus={() => this.handleInputFocus()}\n            onInput={event => this.handleInputChange(event)}\n            onKeyDown={event => this.handleKeyDown(event)}\n            placeholder=\"Type to search...\"\n          />\n          <div class={`context-menu ${this.contextMenuVisible ? 'visible' : ''}`}>\n            {this.suggestions.map(suggestion => (\n              <div class=\"suggestion\" onClick={() => this.handleSuggestionClick(suggestion)}>\n                {suggestion}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n",":host {\n  display: inline-block;\n  position: relative;\n  width: 300px;\n  font-size: 14px;\n  font-family: sans-serif;\n}\n\n.sc-textarea-container {\n  position: relative;\n  width: 100%;\n}\n\n/* Textarea */\n.sc-textarea-input {\n  width: 100%;\n  height: 100px;\n  box-sizing: border-box;\n  padding: 5px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font: inherit;\n}\n\n/* Mirror to calculate caret position */\n.sc-textarea-mirror {\n  position: absolute;\n  visibility: hidden;\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n  top: 0;\n  left: 0;\n  z-index: -9999;\n  font: inherit;\n  line-height: normal;\n  width: 100%;\n  padding: 5px;\n  border: 1px solid transparent;\n  box-sizing: border-box;\n}\n\n/* Suggestions Menu */\n.sc-textarea-suggestions {\n  background: #fff;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  max-height: 200px;\n  overflow-y: auto;\n  z-index: 999;\n}\n\n.sc-textarea-suggestion-item {\n  padding: 5px 8px;\n  cursor: pointer;\n  font-size: 14px;\n  font-family: sans-serif;\n}\n\n.sc-textarea-suggestion-item:hover,\n.sc-textarea-suggestion-item.highlighted {\n  background-color: #eee;\n}","import { Component, h, State, Prop, Listen, Element } from '@stencil/core';\n\n@Component({\n  tag: 'sc-textarea',\n  styleUrl: 'sc-textarea.css',\n  shadow: true\n})\nexport class ScTextarea {\n  @Prop() suggestionUrl: string;\n  @Prop() textareaClass: string; // Optional class for textarea\n\n  @State() suggestions: { original: string; lower: string }[] = [];\n  @State() filteredSuggestions: string[] = [];\n  @State() showSuggestions: boolean = false;\n  @State() currentInputValue: string = '';\n  @State() mentionStartIndex: number = -1;\n  @State() highlightIndex: number = 0;\n  @State() caretCoords: { top: number; left: number } = { top: 0, left: 0 };\n\n  @Element() el: HTMLElement;\n\n  private textareaEl: HTMLTextAreaElement;\n  private mirrorDiv: HTMLDivElement;\n\n  async componentWillLoad() {\n    const response = await fetch(this.suggestionUrl);\n    const text = await response.text();\n    const lines = text\n      .split('\\n')\n      .map(s => s.trim())\n      .filter(s => s.length > 0);\n\n    // Pre-store lowercase versions for faster filtering\n    this.suggestions = lines.map(s => ({ original: s, lower: s.toLowerCase() }));\n  }\n\n  @Listen('keydown', { target: 'window' })\n  handleKeyDown(ev: KeyboardEvent) {\n    if (!this.showSuggestions) return;\n    if (ev.key === 'ArrowDown') {\n      ev.preventDefault();\n      this.highlightIndex = (this.highlightIndex + 1) % this.filteredSuggestions.length;\n    } else if (ev.key === 'ArrowUp') {\n      ev.preventDefault();\n      this.highlightIndex = (this.highlightIndex - 1 + this.filteredSuggestions.length) % this.filteredSuggestions.length;\n    } else if (ev.key === 'Enter') {\n      ev.preventDefault();\n      this.selectSuggestion(this.filteredSuggestions[this.highlightIndex]);\n    } else if (ev.key === 'Escape') {\n      this.showSuggestions = false;\n    }\n  }\n\n  handleInput(e: Event) {\n    const target = e.target as HTMLTextAreaElement;\n    this.currentInputValue = target.value;\n\n    const caretPos = target.selectionStart;\n    const valueUpToCaret = target.value.substring(0, caretPos);\n    const lastAt = valueUpToCaret.lastIndexOf('@');\n\n    if (lastAt > -1) {\n      const query = valueUpToCaret.substring(lastAt + 1).toLowerCase();\n      // Filter suggestions (limit to top 10 for performance)\n      const filtered = this.suggestions\n        .filter(s => s.lower.startsWith(query))\n        .slice(0, 10)\n        .map(s => s.original);\n\n      this.filteredSuggestions = filtered;\n      this.showSuggestions = filtered.length > 0;\n      this.mentionStartIndex = lastAt;\n      this.highlightIndex = 0;\n    } else {\n      this.showSuggestions = false;\n    }\n\n    // Update mirror for caret positioning\n    this.updateMirror();\n  }\n\n  updateMirror() {\n    if (!this.mirrorDiv || !this.textareaEl) return;\n\n    const value = this.currentInputValue;\n    const caretPos = this.textareaEl.selectionStart;\n    const valueUpToCaret = value.substring(0, caretPos);\n    const valueAfterCaret = value.substring(caretPos);\n\n    // We insert a caret marker span at the caret position in the mirrored text\n    const escapedValueUpToCaret = valueUpToCaret\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\\n/g, '<br/> ');\n\n    // Use a marker to indicate caret position\n    const mirrorContent = escapedValueUpToCaret + '<span id=\"caret-marker\">&#8203;</span>' +\n      valueAfterCaret\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\\n/g, '<br/> ');\n\n    this.mirrorDiv.innerHTML = mirrorContent;\n\n    // Now measure the caret position\n    const marker = this.mirrorDiv.querySelector('#caret-marker') as HTMLElement;\n    if (marker) {\n      const markerRect = marker.getBoundingClientRect();\n      const containerRect = this.el.shadowRoot.host.getBoundingClientRect();\n      this.caretCoords = {\n        top: markerRect.top - containerRect.top,\n        left: markerRect.left - containerRect.left\n      };\n    }\n  }\n\n  selectSuggestion(suggestion: string) {\n    const value = this.currentInputValue;\n    const beforeMention = value.substring(0, this.mentionStartIndex);\n    const caretPos = this.textareaEl.selectionStart;\n    const afterCaret = value.substring(caretPos);\n    const newValue = beforeMention + '@' + suggestion + ' ' + afterCaret;\n    this.currentInputValue = newValue;\n    this.showSuggestions = false;\n\n    const newCaretPos = (beforeMention + '@' + suggestion + ' ').length;\n    this.textareaEl.value = newValue;\n    this.textareaEl.setSelectionRange(newCaretPos, newCaretPos);\n    this.textareaEl.focus();\n    this.updateMirror();\n  }\n\n  componentDidLoad() {\n    // Initialize mirror once component is loaded\n    this.updateMirror();\n  }\n\n  render() {\n    const { top, left } = this.caretCoords;\n    return (\n      <div class=\"sc-textarea-container\">\n        <textarea\n          ref={el => this.textareaEl = el}\n          value={this.currentInputValue}\n          onInput={(e) => this.handleInput(e)}\n          class={`sc-textarea-input ${this.textareaClass}`}\n        ></textarea>\n\n        <div class=\"sc-textarea-mirror\" ref={el => this.mirrorDiv = el}></div>\n\n        { this.showSuggestions && this.filteredSuggestions.length > 0 && (\n          <ul \n            class=\"sc-textarea-suggestions\"\n            style={{\n              position: 'absolute',\n              top: `${top + 20}px`, // Slight offset below the cursor\n              left: `${left}px`\n            }} \n            role=\"listbox\"\n          >\n            {this.filteredSuggestions.map((item, index) => (\n              <li \n                class={{\n                  'sc-textarea-suggestion-item': true,\n                  'highlighted': index === this.highlightIndex\n                }}\n                role=\"option\"\n                onClick={() => this.selectSuggestion(item)}\n                onMouseOver={() => this.highlightIndex = index}\n              >\n                {item}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}"],"names":[],"mappings":"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"}